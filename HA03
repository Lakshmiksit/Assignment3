//Ping message transmitting
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class PingIP {

  public static void runSystemCommand(String command) {

		try {
			Process p = Runtime.getRuntime().exec(command);
			BufferedReader inputStream = new BufferedReader(
					new InputStreamReader(p.getInputStream()));

			String s = "";
			// reading output stream of the command
			while ((s = inputStream.readLine()) != null) {
				System.out.println(s);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		
		String ip = "google.com";
		runSystemCommand("ping " + ip);

	
	}
}

//Sender side
package network3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;

public class sender {

    
    public static void main(String[] args) throws SocketException, IOException {
        
         BufferedReader senderRead =new BufferedReader(new InputStreamReader(System.in));
      
      InetAddress IP = InetAddress.getByName("127.0.0.1");
      DatagramSocket senderSocket = new DatagramSocket();
      while(true)    //true
      {
    	  byte[] sendbuffer = new byte[1024];
          byte[] receivebuffer = new byte[1024];
          
          System.out.print("\nsender: ");
          String senderData =senderRead.readLine();
          sendbuffer = senderData.getBytes();        
          DatagramPacket sendPacket =
          new DatagramPacket(sendbuffer, sendbuffer.length, IP, 9876);
         senderSocket.send(sendPacket);
          if(senderData.equalsIgnoreCase("bye"))
          {
              System.out.println("Connection ended by sender");
              break;
          }
          DatagramPacket receivePacket =
          new DatagramPacket(receivebuffer, receivebuffer.length);
          senderSocket.receive(receivePacket);
          String serverData = new String(receivePacket.getData());
          System.out.print("\nServer: " + serverData);
          
          
          }
          senderSocket.close();
        }
        
    }
    //Receiver Side
    package network3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;


public class receiver {

   
    public static void main(String[] args) throws SocketException, IOException {
        
         DatagramSocket receiverSocket = new DatagramSocket(9876);
         boolean bye=false;
      
      while(true) 
        {
          byte[] receivebuffer = new byte[1024];
          byte[] sendbuffer  = new byte[1024];
          DatagramPacket recvdpkt = new DatagramPacket(receivebuffer, receivebuffer.length);
          receiverSocket.receive(recvdpkt);
          InetAddress IP = recvdpkt.getAddress();
          int portno = recvdpkt.getPort();
          String senderdata = new String(recvdpkt.getData());
          System.out.println("\nsender : "+ senderdata);
          System.out.print("\nreceiver : ");
          BufferedReader receiverRead = new BufferedReader(new InputStreamReader (System.in) );
          String receiverdata = receiverRead.readLine();
          
          sendbuffer = receiverdata.getBytes();
          DatagramPacket sendPacket = new DatagramPacket(sendbuffer, sendbuffer.length, IP,portno);
          receiverSocket.send(sendPacket); 
          //here the check condition for receiverdata which must be bye
          if(receiverdata.equalsIgnoreCase("bye"))
          {
              System.out.println("connection ended by receiver");
              break;
          }
          
        }
      receiverSocket.close();
  }
          
  }
